#!/bin/bash
# Description: Script showing the amount of files in the passed directory and the disc space they use

function usage(){
  echo "USAGE: $0 [-l location] [--location location] [-e extension] [--extension extension] [-h] [--help]"
  exit 1
}

LOC_SET=0 # 0 - location is not set, use current location; 1 - location is set
STATS=0 # 0 - do not displat statistics; 1 - display statistics

while [ $# -gt 0 ]
do
  case $1 in 
    -l|--location )
             LOCATION="$2"
             if ! [ -d $LOCATION ]; then
                usage
             fi
	     LOC_SET=1
             shift 2
             ;;
    -e|--extension ) 
            EXT="$2"
            shift 2
            ;;
    -s|--stats ) 
            STATS=1
            shift
            ;;
    -h|--help )
            shift
            usage
            ;;
     * )
        usage
        ;;
  esac
done

if [ $LOC_SET -ne 1 ]; then
  LOCATION=$(pwd)
fi
echo "LOCATION: $LOCATION"

if [ "$EXT" != "" ]; then
  # pattern for the awk command - if the first character of the line, is a file(-),  dir(d); link(l)
  ls -l $LOCATION | awk '/^-/' | grep "\.$EXT$" &> /dev/null
  if [ $? -ne 0 ]; then
    echo "No file with extension $EXT found"
    exit 2
  fi
  # Count size of files with specific extension
  # -v in awk -> means variable .in this case stats = STATS variable from above
  ls -l $LOCATION | awk '/^-/' | grep "\.$EXT$" | awk -v stats=$STATS '{
  sum+=$5
  if (NR==1){
    min=$5
    max=$5
    min_name=$9
    max_name=$9
  }
  
  if ($5 > max){
    max=$5
    max_name=$9
  }

  if ($5 < min){
    min=$5
    min_name=$9
   }
  }
  END{
  print "SUM: ", sum/1024/1024, "MB"
  print "FILES: ", NR
  if (stats==1) {
    print "LARGEST file:\t", max_name, max/1024/1024, "MB"
    print "SMALLEST file:\t", min_name, min/1024/1024, "MB"
   }
  }'
  else
    ls -l $LOCATION | awk '/^-/' | awk -v stats=$STATS '{
  sum+=$5
  if (NR==1){
    min=$5
    max=$5
    min_name=$9
    max_name=$9
  }
  
  if ($5 > max){
    max=$5
    max_name=$9
  }

  if ($5 < min){
    min=$5
    min_name=$9
  }
  }
  END {
  print "SUM: ", sum/1024/1024, "MB"
  print "FILES: ", NR
  if (stats==1) {
    print "LARGEST file:\t", max_name, max/1024/1024, "MB"
    print "SMALLEST file:\t", min_name, min/1024/1024, "MB"
    }
  }
  '
fi



